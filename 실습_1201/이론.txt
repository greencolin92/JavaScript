* 함수
1. 내장 함수
prompt()
alert()
document.write()
console.log()

2. 사용자 정의 함수 = 사용자 함수

function 함수명(){

	함수 정의 문장 작성!
	함수 정의 문장 작성!
}

함수명();


메인 루틴
서브 루틴 : 함수 정의


변수의 적용범위
1. 지역 변수 : 사용자 정의 함수 내에서 사용되는 변수
   함수 내 var

2. 전역 변수(글로벌 변수) : script 전체에서 사용할 수 있는 변수
  함수 외 var / 함수 내 var 없이



* 객체 : 자료형을 여러개 한번에 저장 / 속성과 메소드
var 객체명={
  key: 값,    (숫자)
  key: "값2",  (문자)
}

var 객체명={
  key(속성) : 속성값,    (숫자)
  key(속성): "속성값2",  (문자)
  메소드1 : function(){
}
  메소드2 : function(){
}
}
** 메서드 입력 가능 : 객체가 어떻게 동작할지를 선언해 놓은 함수

객체의 종류
1. 내장 객체 : 미리 정의된 객체
 - 날짜 정보 객체
 가져올 때 : get / 수정할 때 : set
    FullYear() : 연도
    Month() : 월
    Date() : 일
    Day() : 요일
    Hour(), Minute(), Second() : 시간

 getFullYear()
 SetFullYear()

** 현재의 날짜 정보
변수 = new Date();

 - 수학 객체
   Math.max
   Math.min
   Math.round
   Math.floor
   Math.sqrt

 - 배열 객체
 var 변수명 = [값1, 값2, 값3, .....];
 var 변수명 = new Array(값1, 값2, 값3, .....);

 1) var a = new Array(10, "문자", true);
 2) var a = [10, "문자", true];
 3) var a = new Array();
    a[0] = 10;
    a[1] = "문자";
    a[2] = true;

https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects

2. 문서 객체 모델(DOM) : 객체를 사용해서 웹 문서를 관리하는 방식
3. 브라우저 객체 모델 : 웹 문서를 관리
4. 사용자 정의 객체
 - 객체 literal : 데이터 값 자체, 속성과 메소드 통해 작성
 - 생성자 함수와 New연산자
   생성자 함수를 통해서 객체의 타입을 정의
   생성자 함수는 첫글자 영문 대문자
        function Book
 - new 객체를 생성

 for(변수명 in 객체명){
}
 for(var i in b)
   var b={age:22, name:홍길동}





